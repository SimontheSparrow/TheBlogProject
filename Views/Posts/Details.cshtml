@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json
@using TheBlogProject.Services
@model TheBlogProject.Models.Post
@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@{
    ViewData["Title"] = "Details";
}
    <article class="mb-4">
            <div class="container px-4 px-lg-5">
                <div class="row gx-4 gx-lg-5 justify-content-center">
                    <div class="col-md-10 col-lg-8 col-xl-7">
                      
                          @Html.Raw(Model.Content)
                        
                    </div>
                </div>
            </div>
        </article>

        <hr />
        <article>
            <div class="row">
                <div class="col text-center font-weight-bold h3">Custom post tags</div>
            </div>
            <div class="row">
                <div class="col">
            @foreach(var tag in Model.Tags)
            {
                <a class="btn btn-warning" asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()">#@tag.Text</a>
            }
        </div>
            </div>
        </article>
        <hr />

        <div >
    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="Create" asp-controller="Comments" method="post">
            @Html.Hidden("PostId", Model.Id)
            <div class="form-group">
                <label class="h2 control-label font-weight-bold">Add Comment</label>
                <textarea name="body" class="form-control" rows="10"></textarea>
            </div>
            <button type="submit" class="btn btn-dark col-12 btn-sm">Submit</button>

        </form>
    }
    else
    {
        <a class="btn col-12 btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login" >Login to add comments</a>
    }
</div>
<span class="btn btn-sm btn-dark col-12">@Model.Comments.Count COMMENTS(S)</span>

@foreach(var comment in Model.Comments)
{
    <div>
        <img class="mr-3 mt-3 rounded-circle" style="width:60px" src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)"/>
        <div>
            <h4>@comment.BlogUser.FullName</h4>
           <small><i>Posted on @comment.Created.ToString()</i></small>
           <p>@comment.Body</p>
            @if(comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
            {
                <hr />
                <button data-bs-toggle="modal" data-bs-target="#editModal" class="btn btn-sm btn-dark float-rigt">Edit</button>
            }
        </div>
    </div>

    <div class="modal" id="editModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Editing comment</h4>
                </div>
                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)
                        <div class="form-group">
                            <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                        </div>
                        <button class="btn btn-sm btn-dark">Submit</button>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-dark" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
